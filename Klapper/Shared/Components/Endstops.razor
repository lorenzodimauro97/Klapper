@using Klapper.Data
@using Klapper.Classes
@inject MoonrakerApiService Api;

<div class="card">
    <div class="card-body">
        <h3 class="card-title text-center">Endstops</h3>
        <button type="button" class="btn btn-secondary" @onclick="GetEndstops">
            <span class="oi oi-reload" aria-hidden="true"></span>
        </button>
        @if (_endstops != null)
        {
            <div>X: <strong>@_endstops?.x.ToUpperInvariant()</strong></div>
            <div>Y: <strong>@_endstops?.y.ToUpperInvariant()</strong></div>
            <div>Z: <strong>@_endstops?.z.ToUpperInvariant()</strong></div>
        }
    </div>
</div>

@code
{
    private Endstop? _endstops;

    protected override async Task OnInitializedAsync()
    {
    //SetKlipperStatusTimer();

        await base.OnInitializedAsync();
    }

    private async Task GetEndstops()
    {
        var result = (await Api.GetEndstops());
        if (result != null)
            _endstops = result.result;
    }

    private void SetKlipperStatusTimer()
    {
        var timer = new System.Timers.Timer(6000);
        timer.Elapsed += async (_, _) =>
        {
            await GetEndstops();
            await InvokeAsync(StateHasChanged);
            timer.Start();
        };
        timer.AutoReset = false;
        timer.Enabled = true;
    }
}
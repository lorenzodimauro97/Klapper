@using Klapper.Data
@using Klapper.Classes
@using System.Globalization
@inject MoonrakerApiService Api;

<div class="card">
    <div class="card-body text-center">
        <h2 class="card-title text-center">Fans</h2>
        @if (Fan != null)
        {
            <strong>@FanSpeed%</strong>
        }
    </div>
    <div class="card-footer text-center">
        @if (Fan != null)
        {
            <RadzenSlider @bind-Value="@FanSpeed" Step="1" TValue="int" Min="0" Max="100" Style="width: 150px" Change="SetFanSpeed"/>
            <div class="d-flex flex-row flex-wrap justify-content-center pt-2">
                <RadzenNumeric @bind-Value="FanSpeed"
                               TValue="int"
                               Change="async () => await SetFanSpeed()">
                </RadzenNumeric>
            </div>
        }
    </div>
</div>

@code
{
    private Fan? Fan { get; set; }
    private int FanSpeed
    {
        get => (int)(Fan.speed * 100);
        set => Fan.speed = (double)value / 100;
    }

    protected override async Task OnInitializedAsync()
    {
        await GetFans();
        SetKlipperStatusTimer();
        await base.OnInitializedAsync();
    }

    private async Task GetFans()
    {
        var result = await Api.GetObject<MoonrakerQueryResultObject>("fan", false);
        if (result != null)
        {
            Fan = result.result.status.fan;
        }
    }

    private void SetKlipperStatusTimer()
    {
        var timer = new System.Timers.Timer(6000);
        timer.Elapsed += async (_, _) =>
        {
            await GetFans();
            await InvokeAsync(StateHasChanged);
            timer.Start();
        };
        timer.AutoReset = false;
        timer.Enabled = true;
    }

    private async Task SetFanSpeed()
    {
        await Api.RunGCode($"M106 S{(FanSpeed * 2.55 + 1).ToString(CultureInfo.InvariantCulture)}");
    //fan.speed = fanSpeed * 2.55f / 255;
    }
}
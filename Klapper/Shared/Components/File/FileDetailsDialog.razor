@using Klapper.Classes
@using Klapper.Data
@inject MoonrakerApiService Api

<div class="row text-center">
    <h2>Print File?</h2>
    <p class="w-lg-50">@File.filename</p>
</div>
<div class="row justify-content-between">
    <div class="col-md-7">
        <p>
            <strong>·</strong> <strong>Printed With:</strong> @File.slicer
            <br>
            <strong>Version</strong> @File.slicer_version
            <br>
            <br>
            <strong>·</strong> <strong>Estimated time to completion:</strong> @File.GetEstimatedTime()
            <br>
            <br>
            <strong>·</strong> <strong>Layer height:</strong> @File.layer_height mm
            <br>
            <br>
            <strong>·</strong> <strong>Layer count:</strong> @File.layer_count
            <br>
            <br>
            <strong>·</strong> <strong>Estimated object height:</strong> @File.object_height mm
            <br>
            <br>
            <strong>·</strong> <strong>Estimated filament consumption:</strong> @File.filament_total.ToString("n2") mm
        </p>
    </div>
    @if (File.thumbnails?.Count > 0)
    {
        <div class="col-md-4">
            <div class="d-flex flex-column flex-lg-row">
                <img src="data:image/bmp;base64, @(_imageBase64)" alt=""/>
            </div>
        </div>
    }
</div>
<div class="row justify-content-between" style="padding-top: 20px;">
    <div class="col">
        <button class="btn btn-danger ms-1" type="button" @onclick="OnCancel">Cancel</button>
    </div>
    <div class="col text-end">
        <button class="btn btn-success" type="button" @onclick="OnStartPrint">Start Printing</button>
    </div>
</div>

@code
{
    [Parameter]
    public GCodeFileDetails File { get; set; }

    [Parameter]
    public Action OnStartPrint { get; set; }

    [Parameter]
    public Action OnCancel { get; set; }

    private string _imageBase64;

    protected override async Task OnInitializedAsync()
    {
        if (File.thumbnails?.Count > 0)
            _imageBase64 = Convert.ToBase64String(await Api.GetImage(File.thumbnails.Last().relative_path));
        await base.OnInitializedAsync();
    }
}
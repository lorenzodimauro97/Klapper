@using Klapper.Data
@using System.Timers
@inject MoonrakerApiService Api

<div class="container content">
    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">Terminal</div>
                <div class="card-body height3" style=" height: 400px; overflow: scroll">
                    <ul class="chat-list">

                        @foreach (var log in Api.Log)
                        {
                            var messageClass =
                                log.Item1 == "Client" ? "out" : "in";

                            <li class=@messageClass>
                                <div class="chat-body">
                                    <div class="chat-message">
                                        <h5>@log.Item1</h5>
                                        <p>@log.Item3</p>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <div class="card-header">
                    <RadzenTextBox @bind-Value="@Command" Style="width: 90%"/>
                    <button class="btn btn-success" type="button" @onclick="SendCommand">Send</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code
{
    private string Command { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SetAutoRefresh();
        await base.OnInitializedAsync();
    }

    private void SetAutoRefresh()
    {
        var timer = new Timer(1000);
        timer.Elapsed += async (sender, args) => { await InvokeAsync(StateHasChanged); };
        timer.AutoReset = true;
        timer.Enabled = true;
    }

    private async Task SendCommand()
    {
        if (Command.Contains("HELP", StringComparison.InvariantCultureIgnoreCase))
            await Api.GetGCodeList();
        else
            await Api.RunGCode(Command);
        Command = string.Empty;
    }
}

<style>
body{
    background:#eee;    
}
.chat-list {
    padding: 0;
    font-size: .8rem;
}

.chat-list li {
    margin-bottom: 10px;
    overflow: auto;
    color: #ffffff;
}

.chat-list .chat-img img {
    -webkit-border-radius: 50px;
    -moz-border-radius: 50px;
    border-radius: 50px;
    width: 100%;
}

.chat-list .chat-message {
    -webkit-border-radius: 50px;
    -moz-border-radius: 50px;
    border-radius: 50px;
    background: #5a99ee;
    display: inline-block;
    padding: 10px 20px;
    position: relative;
}

.chat-list .chat-message h5 {
    margin: 0 0 5px 0;
    font-weight: 600;
    line-height: 100%;
    font-size: .9rem;
}

.chat-list .chat-message p {
    line-height: 18px;
    margin: 0;
    padding: 0;
}

.chat-list .chat-body {
    margin-left: 20px;
    float: left;
    width: 70%;
}

.chat-list .in .chat-message:before {
    left: -12px;
    border-bottom: 20px solid transparent;
    border-right: 20px solid #5a99ee;
}

.chat-list .out .chat-img {
    float: right;
}

.chat-list .out .chat-body {
    float: right;
    margin-right: 20px;
    text-align: right;
}

.chat-list .out .chat-message {
    background: #fc6d4c;
}

.chat-list .out .chat-message:before {
    right: -12px;
    border-bottom: 20px solid transparent;
    border-left: 20px solid #fc6d4c;
}

.card .card-header:first-child {
    -webkit-border-radius: 0.3rem 0.3rem 0 0;
    -moz-border-radius: 0.3rem 0.3rem 0 0;
    border-radius: 0.3rem 0.3rem 0 0;
}
.card .card-header {
    background: #17202b;
    border: 0;
    font-size: 1rem;
    padding: .65rem 1rem;
    position: relative;
    font-weight: 600;
    color: #ffffff;
}

.content{
    margin-top:40px;    
}
</style>
@page "/Tools/PIDCalibrator"
@using Klapper.Data
@using Klapper.Classes
@using System.Text
@using System.Globalization
@inject NotificationService Toast
@inject PIDCalibrationService PidService

<div class="row text-center">
    <h2>PID Calibrator</h2>
</div>
<div class="row">
    <div class="col-md-6 col-lg-4 col-xl-3 p-3">
        <RadzenCard>
            <h4 class="mb-4">Select Heater</h4>
            <RadzenDropDown Disabled="PidService.pidIsCalibrating" AllowClear="true" TValue="string" Class="w-100"
                            Data="@PidService.Heaters"
                            @bind-Value="PidService.selectedHeater"/>
            <h4 class="mb-4">Set Temperature</h4>
            <RadzenNumeric Disabled="PidService.pidIsCalibrating" TValue="int" @bind-Value="PidService.targetTemperature" Class="w-100"/>
            <h4 class="mb-4">Number of runs</h4>
            <RadzenNumeric Disabled="PidService.pidIsCalibrating" TValue="int" @bind-Value="PidService.numberOfRuns" Class="w-100"/>
            <button type="button" class="btn btn-success" disabled="@PidService.pidIsCalibrating" @onclick="async () => await PidService.StartPIDCalibration(PidService.numberOfRuns, PidService.selectedHeater, PidService.targetTemperature, Toast)">Start PID Calibration</button>

        </RadzenCard>
    </div>
</div>

<div class="row">
    @foreach (var pid in PidService.PidList)
    {
        <div class="col-md-4 p-3">
            <RadzenCard class="">
                <h3 class="mb-4">
                    <strong>PID Calibration Result</strong>
                </h3>
                <h4 class="mb-4">Ki: <strong>@pid.Ki</strong></h4>
                <h4 class="mb-4">Kp: <strong>@pid.Kp</strong></h4>
                <h4 class="mb-4">Kd: <strong>@pid.Kd</strong></h4>
            </RadzenCard>
        </div>
    }
</div>

<div class="row">
    @if (PidService.CalibrationResult != null)
    {
        <div class="col-md-4 p-3">
            <h3 class="mb-4">
                <strong>Final PID Calibration Result</strong>
            </h3>
            <RadzenCard>
                <h4 class="mb-4">Ki: <strong>@PidService.CalibrationResult.Ki</strong></h4>
                <h4 class="mb-4">Kp: <strong>@PidService.CalibrationResult.Kp</strong></h4>
                <h4 class="mb-4">Kd: <strong>@PidService.CalibrationResult.Kd</strong></h4>

                <br/>
                <h4>Click the "Upload" button to save the configuration or press the "Reset" button to reset the PID Calibrator Tool</h4>
                <div class="btn-group text-center" role="group">
                    <button type="button" class="btn btn-success" @onclick="async () => await PidService.UpdateConfig(PidService.selectedHeater, Toast)">Upload</button>
                    <button type="button" class="btn btn-danger" @onclick="PidService.Reset">Reset</button>
                </div>
            </RadzenCard>
        </div>
    }
</div>

@code
{

    protected override async Task OnInitializedAsync()
    {
        var queryList = await PidService.Api.GetObject<MoonrakerQueryResultObject>("heaters", false);

        if (queryList != null)
        {
            PidService.Heaters = queryList.result.status.heaters.available_heaters;
        }
    }
}
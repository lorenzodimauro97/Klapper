@using Klapper.Shared.Components
@using Klapper.Data
@using Klapper.Shared.Components.File
@inject PrinterStatusService StatusService

@if (StatusService.KlipperIsRunning && StatusService.KlippyIsReady)
        {
            <PrinterStatus OnPausePrint="async () => { await Api.PauseCancelResumePrint(0); }"
                           OnCancelPrint="async () => { await Api.PauseCancelResumePrint(1); }"
                           OnResumePrint="async () => { await Api.PauseCancelResumePrint(2); }"
                           OnClearPrint="async () => { await Api.RunGCode(SpecialGCodeCommands.ClearSDCard); }">
            </PrinterStatus>

            <PrinterControls MaxExtrusion="300"></PrinterControls>

            if (Sensors != null)
            {
                @foreach (var heater in Sensors)
                {
                    <div style="display:inline-block; padding: 20px">
                        <ProductCard @ref="HeaterComponent" Name=@heater></ProductCard>
                    </div>
                }

                <TemperatureChart Sensors="HeaterComponents"></TemperatureChart>
                <FileGrid></FileGrid>
                <TerminalLogger></TerminalLogger>
            }
        }

@code
{
    [Parameter]
    public List<ProductCard> HeaterComponents { get; set; }

    public ProductCard HeaterComponent
    {
        set => HeaterComponents.Add(value);
    }

    [Parameter] public List<string> Sensors { get; set; }
}